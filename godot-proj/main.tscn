[gd_scene load_steps=8 format=2]

[ext_resource path="res://gfx/splash/splash_1.png" type="Texture" id=1]
[ext_resource path="res://gfx/splash/splash_0.png" type="Texture" id=2]
[ext_resource path="res://snd/disc/disc1.wav" type="AudioStream" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// ordered dither and faked colour-depth reducer
// tries to make it look like it's running on a Hi-Saturn

void fragment()
{
//	int 	screen_x = int(UV.x * SCREEN_PIXEL_SIZE.x);
//	int 	screen_y = int(UV.y * SCREEN_PIXEL_SIZE.y);
	int 	screen_x = int(UV.x * 320.0);
	int 	screen_y = int(UV.y * 224.0);

	
	float precision = 40.0;
	
	vec3 	downsampled_colour;
	
	if (((screen_x + screen_y) % 2) == 0)  
		downsampled_colour = floor(texture(TEXTURE, UV).xyz * precision) / precision;
	else
	{
		downsampled_colour = floor(texture(TEXTURE, UV).xyz * precision * 3.9) /precision / 3.9;
	} 
	
	COLOR.xyz = downsampled_colour;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="GDScript" id=3]
script/source = "extends Viewport

#-----------------------------------------

func change_scene_to(next_scene):
	self.remove_child(get_child(0));
	self.add_child(next_scene.instance());
	return;"

[sub_resource type="GDScript" id=4]
script/source = "extends Node2D

var anim_clock : int = 0;

const II_LOGO_END : int = 180;
const SPLASH_END  : int = 420;

#-------------------------------------------------------------------------------

func _ready():
	set_process(true);
	get_node(\"disc_noises\").play();
		
	var screenwipe = load(\"res://helper_screenwipe.tscn\");
	add_child(screenwipe.instance());
	Global.new_scene_screenwipe_start();
	Global.load_options_data();

	return;

#-------------------------------------------------------------------------------

func _process(_ignored):
	anim_clock += 1;
	
	if (anim_clock > II_LOGO_END):
		get_child(1).modulate = Color8(255,255,255, 255-clamp(-(II_LOGO_END - anim_clock)*2,0,255));

	if (anim_clock == SPLASH_END):
		Global.change_scene_to((load(\"res://menu_root.tscn\")));	
	return;"

[node name="main" type="Node2D"]

[node name="colour_ruiner" type="ViewportContainer" parent="."]
material = SubResource( 2 )
margin_right = 320.0
margin_bottom = 224.0

[node name="game_root" type="Viewport" parent="colour_ruiner"]
size = Vector2( 320, 224 )
handle_input_locally = false
render_target_update_mode = 3
script = SubResource( 3 )

[node name="splash_screen_root" type="Node2D" parent="colour_ruiner/game_root"]
script = SubResource( 4 )

[node name="screen_1" type="Sprite" parent="colour_ruiner/game_root/splash_screen_root"]
texture = ExtResource( 1 )
centered = false

[node name="screen_0" type="Sprite" parent="colour_ruiner/game_root/splash_screen_root"]
texture = ExtResource( 2 )
centered = false

[node name="disc_noises" type="AudioStreamPlayer" parent="colour_ruiner/game_root/splash_screen_root"]
stream = ExtResource( 3 )
volume_db = -15.0
